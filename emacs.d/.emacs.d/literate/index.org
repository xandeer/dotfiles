#+PROPERTY: header-args:elisp :tangle (concat temporary-file-directory "init.el")

* File Header

This includes some necessary headers.

#+BEGIN_SRC elisp
  ;;; init.el --- Xandeer's Emacs Configuration file.            -*- lexical-binding: t; -*-
  ;; Copyright (C) 2020  Xandeer

  ;;; Commentary:

  ;; Xandeer's emacs.d init file.
#+END_SRC

#+BEGIN_SRC elisp :exports none
  ;;----------------------------------------------------------------------------
  ;; DO NOT EDIT THIS FILE DIRECTLY
  ;; This is a file generated from a literate programing source file located at
  ;; index.org
  ;;
  ;; You should make any changes there and regenerate it from Emacs org-mode
  ;; using C-c C-v t
  ;;----------------------------------------------------------------------------

  ;;; Code:
#+END_SRC

* Lexical Binding

This makes it so that the file that is produced from tangling this file uses
lexical scoping.

#+BEGIN_SRC elisp
  (setq-default lexical-binding t)
#+END_SRC

* Bootstrap

In this section, it will include default settings, ~load-path~ and packages
manager.  At the same time, it will initialize the benchmark and garbage
collection.

#+BEGIN_SRC elisp
  ;;------------------------------------------------------------------------------
  ;; Bootstrap
  (add-to-list 'load-path (expand-file-name "config" user-emacs-directory))
  (require 'xandeer-bootstrap)
#+END_SRC

#+include: "bootstrap/bootstrap.org"

* Core

#+BEGIN_SRC elisp
  (xandeer/local-repo core)
  (require 'xandeer-core)
#+END_SRC

#+include: "core/core.org"

* Editor

#+BEGIN_SRC elisp
  (xandeer/local-repo editor)
  (require 'xandeer-editor)
#+END_SRC

#+include: "editor/editor.org"

* Tools

#+BEGIN_SRC elisp
  (xandeer/local-repo tools)
  (require 'xandeer-tools)
#+END_SRC

#+include: "tools/tools.org"

* Languages

#+BEGIN_SRC elisp
  (xandeer/local-repo langs)
  (require 'xandeer-langs)
#+END_SRC

#+include: "langs/langs.org"

* Org Mode

#+BEGIN_SRC elisp
  (xandeer/local-repo org)
  (require 'xandeer-org)
#+END_SRC

#+include: "org/org.org"

* UI

#+BEGIN_SRC elisp
  (xandeer/local-repo ui)
  (require 'xandeer-ui)
#+END_SRC

#+include: "ui/ui.org"

* Epilogue

#+BEGIN_SRC elisp :exports none
  ;;----------------------------------------------------------------------------
  ;; Epilogue
  ;;----------------------------------------------------------------------------
#+END_SRC

#+BEGIN_SRC elisp
  (run-hooks 'xandeer/config-before-hook)

  (setq custom-file (no-littering-expand-etc-file-name "custom.el"))

  (add-hook 'after-init-hook #'(lambda () (run-hooks 'xandeer/config-after-hook)))

  (when (file-exists-p custom-file)
    (load custom-file))

  (when *server*
    (server-start))
  ;;; init.el ends here
#+END_SRC
