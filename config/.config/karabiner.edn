{:profiles
 {:xandeer
  {:default true
   :alone 150                   ; hold for .. ms to register single tap
   :delay 0                     ; time after witch the key press is delayred
   :held 50                     ; not sure what it's for
   :sim 50}} ; keys need to be pressed within this threshold to be considered simultaneous
 :templates {:open-app "osascript -e 'tell application \"%s\" to activate'"}
 :simlayers {:space-mode {:key :spacebar}
             :a-mode {:key :a}
             :cl-mode {:key :caps_lock}
             :l-mode {:key :l}
             :r-mode {:key :r}
             :s-mode {:key :s :modi {:optional [:left_shift :right_shift]}}
             :v-mode {:key :v}
             :w-mode {:key :w}}
 :devices {:built-in [{:vendor_id 1452 :product_id 641}]}
 :applications
 { ;; To obtain the app ID: `grep -A1 "CFBundleIdentifier" /Applications/The.app/Contents/Info.plist`
  :chrome ["com.google.Chrome", "com.google.Chrome.beta"]
  :emacs ["org.gnu.Emacs"]
  :studio ["com.google.android.studio"]}
 :main
 [{:des "(s-[key]) symbols and numbers"
   :rules [[:condi :s-mode :built-in]
           [:m :1]
           [:comma :2]
           [:period :3]
           [:j :4]
           [:k :5]
           [:l :6]
           [:u :7]
           [:i :8]
           [:o :9]
           [:p :0]
           [:e :tab]
           [:a :!S3]
           [:d :!S9]
           [:c :!S0]
           [:f :open_bracket]
           [:v :close_bracket]
           [:b :grave_accent_and_tilde]
           [:y :equal_sign]
           [:h :hyphen]
           [:n :backslash]
           [:semicolon :#Psemicolon]
           [:slash :period]
           [:quote :!Squote]]}

  {:des "swap : and ;"
   :rules [[:#Psemicolon :!Ssemicolon]
           [:!Ssemicolon :semicolon]]}

  {:des "(l-[key]) k to escape"
   :rules [:l-mode
           [:k :escape]]}

  {:des "(a-[key]) symbols"
   :rules [[:condi :built-in :a-mode]
           [:m :!S1]
           [:comma :!S2]
           [:period :!S3]
           [:j :!S4]
           [:k :!S5]
           [:l :!S6]
           [:u :!S7]
           [:i :!S8]
           [:o :!S9]
           [:p :!S0]
           [:f :!Sopen_bracket]
           [:v :!Sclose_bracket]
           [:b :!Sgrave_accent_and_tilde]
           [:h :!Shyphen]
           [:y :!Sequal_sign]
           [:n :!Sbackslash]]}

  {:des "(v-[key]) h to backspace"
   :rules [[:condi :built-in :v-mode]
           [:h :delete_or_backspace]
           [:j :escape]]}

  {:des "(caps_lock-[key]) hjkl to arrow"
   :rules [[:condi :cl-mode :built-in]
           ;; [:##caps_lock :left_control nil {:alone :caps_lock}]
           [:j :down_arrow]
           [:k :up_arrow]
           [:h :left_arrow]
           [:l :right_arrow]]}

  ;; {:des "jsim"
  ;;  :rules [[[:j :k] :escape]]}

  {:des "(w-[key]) manage windows with raycast and alttab"
   :rules [[:condi :built-in :w-mode]
           [:grave_accent_and_tilde :!!grave_accent_and_tilde]
           [:e :!!e]
           [:r :!!r]
           [:h :!!h]
           [:l :!!l]
           [:j :!!j]
           [:k :!!k]
           [:m :!!m]
           [:u :!!u]
           [:i :!!i]
           [:o :!!o]]}

  {:des "(spacebar-[key]) launch apps"
   :rules [:space-mode
           [:a [:open-app "Android Studio"]]
           [:c [:open-app "Google Chrome"]]
           [:e [:open-app "Emacs"]]
           [:k :!Of13]                  ; raycast kill process
           [:w :!CS5]                   ; start with record, shot window need a spacebar tap
           [:r :!CS4]                   ; screenshots rect
           [:s :!CS3]]}                 ; screenshots screen

  {:des "f13: launch apps, f16: screenshots"
   :rules [[:f13 [:open-app "Android Studio"]]
           [:!Sf13 [:open-app "Emacs"]]
           [:!Tf13 [:open-app "Google Chrome"]]
           [:f16 :!CS5]                 ; start with record, shot window need a spacebar tap
           [:!Sf16 :!CS4]               ; screenshots rect
           [:!Tf16 :!CS3]]}             ; screenshots screen

  {:des "Chrome shortcuts"
   :rules [:chrome
           [:!Ol :!Ttab]
           [:!Oh :!TStab]
           [:!Oj :!Copen_bracket]
           [:!Ok :!Cclose_bracket]]}

  {:des "Emacs like"
   :rules [[:condi :!emacs :!studio]
           [:!Ob :!Oleft_arrow]
           [:!Of :!Oright_arrow]]}

  {:des "option to escape if alone"
   :rules [:built-in
           [:##left_option :left_option nil {:alone :escape}]
           [:##right_option :left_option nil {:alone :escape}]]}

  {:des "shift to delete if alone"
   :rules [:built-in
           [:##left_shift :left_shift nil {:alone :delete_or_backspace}]
           [:##right_shift :left_shift nil {:alone :delete_or_backspace}]]}

  {:des "command to enter if alone"
   :rules [:built-in
           [:##left_command :left_command nil {:alone :return_or_enter}]
           [:##right_command :left_command nil {:alone :return_or_enter}]]}

  {:des "g/h to shift if held"
   :rules [:built-in
           [:g :left_shift nil {:alone :g}]
           [:h :left_shift nil {:alone :h}]]}

  {:des "f/j to control if held"
   :rules [:built-in
           [:f :left_control nil {:alone :f}]
           [:j :left_control nil {:alone :j}]]}

  {:des "d/k to option if held"
   :rules [:built-in
           [:d :left_option nil {:alone :d}]
           [:k :left_option nil {:alone :k}]]}]}
