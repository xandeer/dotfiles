* Ivy pinyin

#+header: :tangle (concat (file-name-directory (buffer-file-name)) "packages.el")
#+BEGIN_SRC elisp
(package! pinyinlib
  :recipe
  (:host github
   :repo "xlshiz/pinyinlib.el"))
#+END_SRC

# Reference: https://emacs-china.org/t/ivy-read/2432/7
#+BEGIN_SRC elisp
(use-package! pinyinlib
  :after ivy
  :commands pinyinlib-build-regexp-string
  :init
  (setq pinyinlib--simplified-char-table 'pinyinlib--simplified-xiaohe)
  (defun eh-ivy-cregexp (str)
    "The regex builder wrapper to support pinyin."
    (concat
     (ivy--regex-plus str)
     "\\|"
     (pinyinlib-build-regexp-string str)))

  (setq ivy-re-builders-alist
        '((t . eh-ivy-cregexp))))
#+END_SRC

#+header: :tangle no
#+BEGIN_SRC elisp
;; Support pinyin in Ivy
;; Input prefix ';' to match pinyin
;; Refer to  https://github.com/abo-abo/swiper/issues/919 and
;; https://github.com/pengpengxp/swiper/wiki/ivy-support-chinese-pinyin
(use-package! pinyinlib
  :after ivy
  :commands pinyinlib-build-regexp-string
  :config
  (setq pinyinlib--simplified-char-table 'pinyinlib--simplified-xiaohe)
  :init
  (with-no-warnings
    (defun ivy--regex-pinyin (str)
      "The regex builder wrapper to support pinyin."
      (or (pinyin-to-utf8 str)
        (and (fboundp '+ivy-prescient-non-fuzzy)
          (+ivy-prescient-non-fuzzy str))
        (ivy--regex-plus str)))

    (setq ivy-re-builders-alist
          '((t . ivy--regex-pinyin)))

    (defun my-pinyinlib-build-regexp-string (str)
      "Build a pinyin regexp sequence from STR."
      (cond ((equal str ".*") ".*")
        (t (pinyinlib-build-regexp-string str t))))

    (defun my-pinyin-regexp-helper (str)
      "Construct pinyin regexp for STR."
      (cond ((equal str " ") ".*")
        ((equal str "") nil)
        (t str)))

    (defun pinyin-to-utf8 (str)
      "Convert STR to UTF-8 with prefix ';'."
      (cond ((equal 0 (length str)) nil)
        ((equal (substring str 0 1) ";")
          (mapconcat
            #'my-pinyinlib-build-regexp-string
            (remove nil (mapcar
                         #'my-pinyin-regexp-helper
                         (split-string
                          (replace-regexp-in-string ";" "" str)
                          "")))
            ""))
        (t nil)))))
#+END_SRC
